#include <@frontendHeader@>
#include <@libName@CPU.h>
#include <xpu/device.h>

#include <memory>

// #define XPU_DEVICE_LIBRARY_BACKEND_NAME VectorOpsCPU
// #define XPU_DEVICE_LIBRARY_FRONTEND_H "VectorOps.h"

@libName@ &@libName@::instance(xpu::driver type) {
    static @backendName@ testKernelsCPU{};
    static std::unique_ptr<xpu::lib_obj<@libName@>> testKernelsCUDA{};

    switch (type) {
        case xpu::driver::cpu:
            return testKernelsCPU;
        case xpu::driver::cuda:
            if (testKernelsCUDA == nullptr) {
                testKernelsCUDA.reset(new xpu::lib_obj<@libName@>("lib@libName@CUDA.so"));
            }
            return *testKernelsCUDA->obj;
    }

    // unreachable
    return testKernelsCPU;
}